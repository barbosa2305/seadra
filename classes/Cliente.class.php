<?php
/**
 * System generated by SysGen (System Generator with Formdin Framework) 
 * Download SysGen: https://github.com/bjverde/sysgen
 * Download Formdin Framework: https://github.com/bjverde/formDin
 * 
 * SysGen  Version: 1.0.0
 * FormDin Version: 4.2.12-alpha
 * 
 * System seadra created in: 2019-02-15 23:59:31
 */

class Cliente {

	public function __construct(){
	}
	//--------------------------------------------------------------------------------
	public static function selectById( $id ){
		$result = ClienteDAO::selectById( $id );
		return self::trataDados( $result );
	}
	//--------------------------------------------------------------------------------
	public static function selectCount( $where=null ){
		return ClienteDAO::selectCount( $where );
	}
	//--------------------------------------------------------------------------------
	public static function selectAllPagination( $orderBy=null,$where=null,$page=null,$rowsPerPage= null ){
		$result = ClienteDAO::selectAllPagination( $orderBy,$where,$page,$rowsPerPage );
		return self::trataDados( $result );
	}
	//--------------------------------------------------------------------------------
	public static function selectAll( $orderBy=null, $where=null ){
		$result = ClienteDAO::selectAll( $orderBy,$where );
		return self::trataDados( $result );
	}
	//--------------------------------------------------------------------------------
	public static function save( ClienteVO $objVo ){
		$result = null;
		self::getIdMunicipio( $objVo );
		if( $objVo->getIdcliente() ) {
			$result = ClienteDAO::update( $objVo );
		} else {
			self::validar( $objVo );
			$result = ClienteDAO::insert( $objVo );
			if ( $result ) $objVo->setIdcliente( $result );
		}
		if ( $result ) {
			$enderecoVo = self::buildEndereco( $objVo );
			//self::validarEndereco( $enderecoVo );
            Endereco::save( $enderecoVo );
		}
		return $result;
	}
	//--------------------------------------------------------------------------------
	public static function delete( $id ){
		$vo = new ClienteVO();
		$vo->setIdcliente( $id );
		$vo->setStativo( STATUS_INATIVO );
		return ClienteDAO::updateStatus( $vo );
	}
	//--------------------------------------------------------------------------------
	private static function buildEndereco( ClienteVO $objVo ){
		$vo = new EnderecoVO();
		$vo->setIdendereco( $objVo->getIdendereco() );
		$vo->setIdcliente( $objVo->getIdcliente() );
		$vo->setDscep( preg_replace('/[^0-9]/','',$objVo->getDscep()) );
		$vo->setDslogradouro( trim($objVo->getDslogradouro()) );
		$vo->setDscomplemento( trim($objVo->getDscomplemento()) );
		$vo->setDsbairro( trim($objVo->getDsbairro()) );
		$vo->setDslocalidade( trim($objVo->getDslocalidade()) );
		$vo->setIdmunicipio( $objVo->getIdmunicipio() );
		return $vo;
	}
	//--------------------------------------------------------------------------------
	private static function getIdMunicipio( ClienteVO $objVo ){
		if ( $objVo->getCdmunicipio() ) {
			$where = array( 'CDMUNICIPIO'=>$objVo->getCdmunicipio() );
			$municipio = Municipio::selectAll( null,$where );
			if ( !empty($municipio) ) {
				$idMunicipio = $municipio['IDMUNICIPIO'][0];
				$objVo->setIdmunicipio( $idMunicipio );
			}
		}
	}
	//--------------------------------------------------------------------------------
	private static function trataDados( $dados ){
	    if( isset($dados) ){
	        foreach ($dados['STATIVO'] as $key => $value) {
	            $dsPrincipal = 'Erro';
	            if( $value == 'S' ){
	                $dsPrincipal = 'Sim';
	            } else {
	                $dsPrincipal = 'Não';
	            }
	            $dados['DSATIVO'][$key]  = $dsPrincipal;
			}
	    }
	    return $dados;
	}
	//--------------------------------------------------------------------------------
    private static function validar( ClienteVO $objVo ){
		self::validarCpfCnpj( $objVo );
		self::validarEmail( $objVo );
	}
	//--------------------------------------------------------------------------------
    private static function validarCpfCnpj( ClienteVO $objVo ){
        $nrCpfCnpj = $objVo->getNrcpfcnpj();
		$where['NRCPFCNPJ'] = $nrCpfCnpj;
        $dados = self::selectAll( null,$where );
        if( !empty($dados) ){
            throw new DomainException( Mensagem::CPFCNPJ_JA_CADASTRADO ); 
        }
        $where = null;
	}
	//--------------------------------------------------------------------------------
    private static function validarEmail( ClienteVO $objVo ){
        $dsEmail = $objVo->getDsemail();
        $where['DSEMAIL'] = $dsEmail;
        $dados = self::selectAll( null,$where );
        if( !empty($dados) ){
            throw new DomainException( Mensagem::EMAIL_JA_CADASTRADO ); 
        }
        $where = null;
	}
	//--------------------------------------------------------------------------------
	private static function validarEndereco( EnderecoVO $objVo ){
		$dsCep = $objVo->getDscep();
		$dsLogradouro = $objVo->getDslogradouro();
		$dsBairro = $objVo->getDsbairro();
		$idMunicipio = $objVo->getIdmunicipio();
	    if ( !($dsCep && $dsLogradouro && $dsBairro && $idMunicipio) ) {
	        throw new DomainException( Mensagem::OPERACAO_FALHOU ); 
	    }	
	}

}
?>